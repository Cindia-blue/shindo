= shindo

Simple depth first ruby testing, watch and learn.

== Writing tests

There are two commands you should know, 'tests' and 'test'. Tests help you group similar calls to test, but their return value is ignored.  The return value of test, on the other hand, determines success or failure.

A successful test should return true. (yay)

  Shindo.tests do
    test('something really important') { true }
  end

A failing test should return false or nil. (boo)

  Shindo.tests do
    test('something (hopefully) less important') { false }
  end

A pending test shouldn't even have a block (meh)

  Shindo.tests do
    test('something that hasn't been gotten around to yet')
  end

Grouping tests

  Shindo.tests do
    tests('foo/bar') do
      test('foo') { true }
      test('bar') { true }
    end
  end

You can also have descriptions for Shindo.tests, and write that last one like this

  Shindo.tests('foo/bar') do
    test('foo') { true }
    test('bar') { false }
  end

Nest tests as deeply as you would like.

Then, if you want to get real fancy you can also tag your tests, to help narrow down which ones to run

  Shindo.tests do
    tests('foo/bar', ['foo', 'bar']) do
      test('foo') { true }
      test('bar') { true }
    end
  end

Or if you can narrow down even more tightly

  Shindo.tests do
    tests('foo/bar') do
      test('foo', ['foo']) { true }
      test('bar', ['bar']) { true }
    end
  end

== Running tests

Run tests with the shindo command, the easiest is to specify a file name:

  shindo something_tests.rb

You can also give directories and it will run all files ending in _tests.rb and include all files ending in _helper.rb (recurses through subdirectories)

  shindo some_test_directory

That leaves tags, which use +/-.  So run just tests with the 'foo' tag:

  shindo some_test_directory +foo

Or those without the 'bar' tag:

  shindo some_test_directory -bar

Or combine to run everything with a foo tag, but no bar tag

  shindo some_test_directory +foo -bar

== Command line tools

When tests fail you'll get lots of options to help you debug the problem, just enter '?' at the prompt to see your options.

== Copyright

(The MIT License)

Copyright (c) 2009 {geemus (Wesley Beary)}[http://github.com/geemus]

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
